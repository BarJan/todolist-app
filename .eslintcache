[{"C:\\Users\\barjan\\Desktop\\front-end\\todolist-app\\src\\index.js":"1","C:\\Users\\barjan\\Desktop\\front-end\\todolist-app\\src\\App.js":"2","C:\\Users\\barjan\\Desktop\\front-end\\todolist-app\\src\\reportWebVitals.js":"3","C:\\Users\\barjan\\Desktop\\front-end\\todolist-app\\src\\pages\\todoPage.js":"4","C:\\Users\\barjan\\Desktop\\front-end\\todolist-app\\src\\models\\TodoMission.js":"5","C:\\Users\\barjan\\Desktop\\front-end\\todolist-app\\src\\pages\\TodoPage.js":"6","C:\\Users\\barjan\\Desktop\\front-end\\todolist-app\\src\\components\\TodoCard\\TodoCard.js":"7","C:\\Users\\barjan\\Desktop\\front-end\\todolist-app\\src\\components\\InputField\\InputField.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":606,"mtime":1610023735831,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":1221,"mtime":1609754514847,"results":"13","hashOfConfig":"10"},{"size":503,"mtime":1610572342367,"results":"14","hashOfConfig":"10"},{"size":3865,"mtime":1611262824334,"results":"15","hashOfConfig":"10"},{"size":1556,"mtime":1610572616007,"results":"16","hashOfConfig":"10"},{"size":1799,"mtime":1610014695964,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"26iaxa",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},"C:\\Users\\barjan\\Desktop\\front-end\\todolist-app\\src\\index.js",[],"C:\\Users\\barjan\\Desktop\\front-end\\todolist-app\\src\\App.js",[],"C:\\Users\\barjan\\Desktop\\front-end\\todolist-app\\src\\reportWebVitals.js",[],"C:\\Users\\barjan\\Desktop\\front-end\\todolist-app\\src\\pages\\todoPage.js",["36","37","38"],"C:\\Users\\barjan\\Desktop\\front-end\\todolist-app\\src\\models\\TodoMission.js",[],"C:\\Users\\barjan\\Desktop\\front-end\\todolist-app\\src\\pages\\TodoPage.js",["39","40","41","42"],"C:\\Users\\barjan\\Desktop\\front-end\\todolist-app\\src\\components\\TodoCard\\TodoCard.js",[],["43","44"],"C:\\Users\\barjan\\Desktop\\front-end\\todolist-app\\src\\components\\InputField\\InputField.js",["45"],"import { useEffect, useState } from \"react\";\r\nimport { FormControl, InputGroup, Row } from \"react-bootstrap\";\r\nimport TodoMission from \"../../models/TodoMission\";\r\n\r\nfunction InputField(props){\r\n    const {addNewTask} = props;\r\n    const [newTask, setNewTask] = useState(\"\");\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    \r\n    useEffect(()=>{\r\n\r\n        if(newTask){\r\n            const newT = new TodoMission(newTask, false);\r\n            addNewTask(newT);\r\n        }\r\n        setInputValue(\"\");\r\n    },[newTask]);\r\n\r\n\r\n    return(\r\n        <Row>\r\n            <label htmlFor=\"basic-url\">Enter new task for your ToDo list</label>\r\n            <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                    <InputGroup.Text id=\"basic-addon3\">\r\n                        Write here:\r\n                    </InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl id=\"basic-url\" value={inputValue} aria-describedby=\"basic-addon3\" as=\"textarea\" rows={3} onKeyUp ={(e) =>{if (e.keyCode === 13) {\r\n                                                                                                                e.preventDefault();\r\n                                                                                                                setNewTask(e.target.value)\r\n                                                                                                                }\r\n                                                                                                            }\r\n                                                                                                        } onChange={(e)=>setInputValue(e.target.value)}/>\r\n            </InputGroup>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default InputField;\r\n\r\n",{"ruleId":"46","severity":1,"message":"47","line":11,"column":24,"nodeType":"48","messageId":"49","endLine":11,"endColumn":37},{"ruleId":"50","severity":1,"message":"51","line":19,"column":24,"nodeType":"52","endLine":19,"endColumn":85},{"ruleId":"53","severity":2,"message":"54","line":22,"column":40,"nodeType":"55","endLine":22,"endColumn":48},{"ruleId":"46","severity":1,"message":"56","line":1,"column":8,"nodeType":"48","messageId":"49","endLine":1,"endColumn":13},{"ruleId":"46","severity":1,"message":"57","line":3,"column":8,"nodeType":"48","messageId":"49","endLine":3,"endColumn":19},{"ruleId":"46","severity":1,"message":"58","line":4,"column":18,"nodeType":"48","messageId":"49","endLine":4,"endColumn":22},{"ruleId":"46","severity":1,"message":"59","line":4,"column":24,"nodeType":"48","messageId":"49","endLine":4,"endColumn":35},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"50","severity":1,"message":"64","line":17,"column":7,"nodeType":"65","endLine":17,"endColumn":16,"suggestions":"66"},"no-unused-vars","'setTodoFilter' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Assignments to the 'activCounter' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","react/jsx-no-undef","'TodoCard' is not defined.","JSXIdentifier","'axios' is defined but never used.","'TodoMission' is defined but never used.","'Card' is defined but never used.","'CardColumns' is defined but never used.","no-native-reassign",["67"],"no-negated-in-lhs",["68"],"React Hook useEffect has a missing dependency: 'addNewTask'. Either include it or remove the dependency array.","ArrayExpression",["69"],"no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},"Update the dependencies array to be: [addNewTask, newTask]",{"range":"72","text":"73"},[518,527],"[addNewTask, newTask]"]